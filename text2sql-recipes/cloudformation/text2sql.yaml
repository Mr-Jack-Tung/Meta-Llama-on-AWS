AWSTemplateFormatVersion: '2010-09-09'
Description: Deploy resources required to run the text2sql llama3 notebook. 


Resources:

  # VPC for all resources
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsHostnames: true
      EnableDnsSupport: true
      InstanceTenancy: default

  
  SageMakerSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.0.1.0/24
      AvailabilityZone: !Select
        - 0
        - !GetAZs ''
      MapPublicIpOnLaunch: true
    

  DBSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.0.2.0/24
      AvailabilityZone: !Select
        - 0
        - !GetAZs ''

  DBSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.0.3.0/24
      AvailabilityZone: !Select
        - 1
        - !GetAZs ''

  SageMakerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow outbound MySQL
      VpcId: !Ref VPC
      SecurityGroupIngress: []
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 3306
          ToPort: 3306
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: AllowOutboundMySQL


  RDSSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref VPC
      GroupDescription: 'Database instances security group'
      SecurityGroupIngress:
        - 
          CidrIp: 0.0.0.0/0
          FromPort: 3306
          ToPort: 3306
          IpProtocol: tcp
        - 
          CidrIp: 0.0.0.0/0
          FromPort: 80  
          ToPort: 80 
          IpProtocol: tcp

  RDSSubnetGroup:
    Type: 'AWS::RDS::DBSubnetGroup'
    Properties:
      DBSubnetGroupDescription: Subnets to launch db instances into
      SubnetIds: 
      - !Ref DBSubnet1
      - !Ref DBSubnet2

  DatabaseInstance:
    Type: AWS::RDS::DBInstance
    Properties:
      DBInstanceClass: db.t3.micro
      Engine: MySQL
      PubliclyAccessible: false
      AllocatedStorage: 8
      MasterUsername: !Join ['', ['{{resolve:secretsmanager:', !Ref RDSSecret, ':SecretString:username}}' ]]
      MasterUserPassword: !Join ['', ['{{resolve:secretsmanager:', !Ref RDSSecret, ':SecretString:password}}' ]]
      DBSubnetGroupName: !Ref RDSSubnetGroup
      VPCSecurityGroups: 
        - !Ref RDSSecurityGroup
  

  SageMakerRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: sagemaker.amazonaws.com
            Action: 'sts:AssumeRole'
          - Effect: Allow
            Principal:
              AWS: !Sub 'arn:aws:iam::${AWS::AccountId}:root'
            Action: 'sts:AssumeRole'
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonBedrockFullAccess
        - arn:aws:iam::aws:policy/AmazonRDSFullAccess
        - arn:aws:iam::aws:policy/AWSCloudFormationReadOnlyAccess
        - arn:aws:iam::aws:policy/AmazonSageMakerFullAccess
        - arn:aws:iam::aws:policy/SecretsManagerReadWrite 

  CodeRepository:
    Type: AWS::SageMaker::CodeRepository
    Properties:
      GitConfig:
        RepositoryUrl: https://github.com/aws-samples/Meta-Llama-on-AWS.git
        Branch: text2sql-blog
  

  SageMakerNotebook:
    Type: AWS::SageMaker::NotebookInstance
    Properties:
      InstanceType: ml.t3.medium
      RoleArn: !GetAtt SageMakerRole.Arn
      SubnetId: !Ref SageMakerSubnet
      SecurityGroupIds:
        - !Ref SageMakerSecurityGroup
      DefaultCodeRepository: !GetAtt CodeRepository.CodeRepositoryName    

  RDSSecret: 
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: Secrets for MySQL RDS instance made from cloudformation template
      GenerateSecretString:
        SecretStringTemplate: '{"username": "user"}' 
        GenerateStringKey: 'password'
        PasswordLength: 16
        ExcludeCharacters: '"@/\'
 

Outputs:
  DatabaseEndpoint:
    Description: The connection endpoint for the database
    Value: !GetAtt DatabaseInstance.Endpoint.Address

  SecretArn:
    Description: The arn of the secret
    Value: !Ref RDSSecret

  SageMakerNotebookURL:
    Description: SageMaker Notebook Instance
    Value: !Join
      - ''
      - - 'https://'
        - !GetAtt SageMakerNotebook.NotebookInstanceName
        - '.notebook.'
        - !Ref AWS::Region
        - '.sagemaker.aws/lab'
